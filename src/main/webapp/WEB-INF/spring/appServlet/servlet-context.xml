<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
			 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			 xmlns:beans="http://www.springframework.org/schema/beans"
			 xmlns:context="http://www.springframework.org/schema/context"
			 xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/**" location="/resources/" />

	<!-- Tiles -->
	<beans:bean id="tilesConfigurer"
				class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/spring/tiles-setting.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	<beans:bean id="tilesViewResolver"
				class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass"
						value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" />
	</beans:bean>

	<view-controller path="/" view-name="/WEB-INF/views/home/home.jsp"/>

	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- 최대 업로드 가능한 바이트 크기(바이트 단위), -1은 제한이 없음을 의미 -->
		<beans:property name="maxUploadSize" value="10485760" />

		<!-- 업로드 요청을 변환할 때 사용할 문자 인코딩 방식 -->
		<beans:property name="defaultEncoding" value="utf-8" />

	</beans:bean>

	<!-- interceptor 빈 생성 -->
	<beans:bean id="LoginInterceptor" class="com.devcamp.eztour.common.LoginInterceptor"/>
	<!-- interceptor 등록/설정 -->
	<interceptors>
		<interceptor>
			<mapping path="/user/*"/>
			<mapping path="/reserv/list"/>
			<mapping path="/reserv/conf"/>
			<mapping path="/reserv/reservView"/>
			<mapping path="/pay/pay"/>
			<mapping path="/pay/saveResult"/>
			<mapping path="/pay/confirm"/>
			<mapping path="/pay/cnc"/>
			<exclude-mapping path="/user/login"/>
			<exclude-mapping path="/user/auth"/>
			<exclude-mapping path="/user/join"/>
			<exclude-mapping path="/user/authOk"/>
			<exclude-mapping path="/user/userNaverLoginPro"/>
			<exclude-mapping path="/user/setSubInfo"/>
			<exclude-mapping path="/user/findIdPwd"/>
			<exclude-mapping path="/user/findAndChangePwd"/>
			<exclude-mapping path="/user/selectJoin"/>
			<exclude-mapping path="/user/rstRelease"/>
			<exclude-mapping path="/user/setNaverConnection"/>
			<beans:ref bean="LoginInterceptor"/>
		</interceptor>
	</interceptors>
	
	<context:component-scan base-package="com.devcamp.eztour"/>


</beans:beans>